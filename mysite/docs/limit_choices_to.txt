Limiting Choices in the Admin Panel
====================================

This is an app exploring `this question <https://stackoverflow.com/questions/67238125/django-admin-not-limiting-choices-on-manytomany-field>`.


In the real app the Team dropdown stopped limiting choices to people per 
sales role.

I created a toy app to show the problem and I could not recreate it. See
commit `7b875f1 <https://github.com/JoshuaEnglish/djangotest/commit/7b875f1197e45a3472ebd5ae8646484fea9796b9>`

One thing I noticed is that in the real app I was presented with a series of 
dropdowns, but in the toy app I had a selection field, even when I added well 
over 50 reps and engineers (using the `init_limit_data` and `flood_limit_data`
commands.)

The real app uses both `simple_history` and `import-export`, so perhaps it isn't
the number of options that forces the difference.

In the real app I was using a `admin.TabularInline` widget, and that was the
issue. I had excluded the many-to-many fields on the model and used my
tabular inlines instead, and those were not filtering by the `limit_choices_to`
on the model.

By using both the model and the admin (see `efc1ae0 <https://github.com/JoshuaEnglish/djangotest/commit/efc1ae01463ae71e581fd88de6c51ca890b2d270>` in the toy, I can see the HTML SELECT box
generated by django works, but the dropdowns created by the TabularInlines
do not.

The simple solution is to ignore the Tabular inlines. They don't work, they
aren't labeled properly, and it won't kill me to have Select boxes instead
of dropdowns.

But, because I like the dropdowns, I tried to see if I could create a filtered
tabularinline. 

.. code-block:: python
	class RepInline(admin.TabularInline):
	model = Team.rep.through

	def get_queryset(self, request):
		qs = super().get_queryset(request)
		return qs.filter(person__role__name="Sales Rep")

This, sadly, didn't work, and I can't spend any more time on this.
